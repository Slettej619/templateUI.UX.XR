You are given a task to integrate an existing React component in the codebase

The codebase should support:
- shadcn project structure  
- Tailwind CSS
- Typescript

If it doesn't, provide instructions on how to setup project via shadcn CLI, install Tailwind or Typescript.

Determine the default path for components and styles. 
If default path for components is not /components/ui, provide instructions on why it's important to create this folder
Copy-paste this component to /components/ui folder:
```tsx
animate-checkbox.tsx
"use client"

import React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { motion } from "motion/react"

import { cn } from "@/lib/utils"

export function Checkbox({
  className,
  checked: checkedProp,
  onCheckedChange: setCheckedProp,
  disabled,
  defaultChecked,
  ...props
}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {
  const [_checked, _setChecked] =
    React.useState<CheckboxPrimitive.CheckedState>(defaultChecked ?? false)

  const checked = checkedProp ?? _checked

  const setChecked = React.useCallback(
    (
      value:
        | CheckboxPrimitive.CheckedState
        | ((value: CheckboxPrimitive.CheckedState) => boolean),
    ) => {
      const checkedState = typeof value === "function" ? value(checked) : value
      if (setCheckedProp) {
        setCheckedProp(checkedState)
      } else {
        _setChecked(checkedState)
      }
    },
    [setCheckedProp, checked],
  )

  return (
    <motion.div
      whileTap={disabled ? undefined : { scale: 0.95 }}
      whileHover={disabled ? undefined : { scale: 1.05 }}
      transition={{
        type: "spring",
        stiffness: 400,
        damping: 25,
      }}
    >
      <CheckboxPrimitive.Root
        checked={checked}
        onCheckedChange={(value) => setChecked(!!value)}
        disabled={disabled}
        className={cn(
          "flex items-center justify-center border-input focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border transition-all duration-200 outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 hover:shadow-sm hover:border-primary/20",
          className,
        )}
        {...props}
      >
        <motion.svg
          className="h-full w-full"
          viewBox="0 0 12 12"
          fill="none"
          initial={false}
          style={{ scale: 1, opacity: 1 }}
        >
          <motion.path
            d="M2.5 6L4.5 8L9.5 3"
            stroke="currentColor"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
            fill="none"
            animate={checked ? "checked" : "unchecked"}
            variants={{
              checked: {
                pathLength: 1,
                strokeDasharray: "1 1",
                opacity: 1,
                transition: {
                  pathLength: { duration: 0.2, ease: "easeInOut", delay: 0.1 },
                  strokeDasharray: {
                    duration: 0.2,
                    ease: "easeInOut",
                    delay: 0.1,
                  },
                  opacity: { duration: 0.1, ease: "easeInOut" },
                },
              },
              unchecked: {
                pathLength: 0,
                strokeDasharray: "0 1",
                opacity: 0,
                transition: {
                  pathLength: { duration: 0.3, ease: "easeInOut" },
                  strokeDasharray: {
                    duration: 0.3,
                    ease: "easeInOut",
                    delay: 0.1,
                  },
                  opacity: { duration: 0.3, ease: "easeInOut", delay: 0.1 },
                },
              },
            }}
          />
        </motion.svg>
      </CheckboxPrimitive.Root>
    </motion.div>
  )
}


demo.tsx

import { Checkbox } from "@/components/ui/animate-checkbox";

export default function DemoOne() {
  return <div className="flex flex-col gap-6">
      <div className="flex items-center gap-2">
        <Checkbox />
        <div><a className='underline pointer-cursor' target="_blank" href="https://moleculeui.design" variant='link'>Checkout Molecule UI</a></div>
      </div>

      <div className="flex items-center gap-2">
        <Checkbox defaultChecked />
        <div><a className='underline pointer-cursor'  target="_blank" href="https://moleculeui.design" variant='link'>Checkout Molecule UI</a></div>
      </div>

      <div className="flex items-center gap-2">
        <Checkbox
          defaultChecked
          className="data-[state=checked]:border-blue-600 data-[state=checked]:bg-blue-600 data-[state=checked]:text-white "
        />
        <div>Enable Notification</div>
      </div>

    </div>;
}

```

Install NPM dependencies:
```bash
motion, @radix-ui/react-checkbox
```

Implementation Guidelines
 1. Analyze the component structure and identify all required dependencies
 2. Review the component's argumens and state
 3. Identify any required context providers or hooks and install them
 4. Questions to Ask
 - What data/props will be passed to this component?
 - Are there any specific state management requirements?
 - Are there any required assets (images, icons, etc.)?
 - What is the expected responsive behavior?
 - What is the best place to use this component in the app?

Steps to integrate
 0. Copy paste all the code above in the correct directories
 1. Install external dependencies
 2. Fill image assets with Unsplash stock images you know exist
 3. Use lucide-react icons for svgs or logos if component requires them
